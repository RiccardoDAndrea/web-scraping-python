In the documentation is all about the Strucute how 
and were to save files.


- LICENSE:                      # This file contains the legal terms and conditions governing 
                                  the use and distribution of your script. It's important for 
                                  protecting your work and specifying how others can use it.
- .gitignore                    
                                # This file specifies patterns of files and directories that 
                                  should be ignored by version control systems like Git. 

                                  It typically includes files generated during the development 
                                  process or sensitive information that shouldn't be shared publicly, ensuring a cleaner repository.
                                  Example: api codes, financial numbers, passwords, names (anything were you think that should be a seceret)

- README.md                     # This file serves as a description of your project. It can be concise 
                                  or detailed, providing information about what your script does, how to use it, 
                                  installation instructions, examples, and any other relevant details to help users 
                                  understand and contribute to your project.
                                  Example: Create a Strucuter

- requirements.txt              # This file lists all the packages and dependencies required by your script. 
                                  By including this file, you make it easier for others to reproduce your 
                                  environment and run your script without having to manually install each dependency.
                                  Also alphabetical orderd
                                  Example 

- Strucutre_info.txt            # This file contains documentation for the structure of your project. 
                                  It outlines standards and conventions that should be followed in every project, helping maintain consistency and making it easier for developers to understand and navigate the codebase.

- data              
    --> external                # Data from third party sources.
    --> interim                 # Intermediate data that has been transformed.
    --> processed               # The final, canonical data sets for modeling.
    --> raw                     # The original, immutable data dump.

- docs                          # documentation for you work
- models                        # Trained and serialized models, model predictions, or model summaries

